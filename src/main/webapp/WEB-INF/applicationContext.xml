<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jaxrs="http://cxf.apache.org/jaxrs"
       xmlns:cxf="http://cxf.apache.org/core"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
            http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd">


    <!--
    infinispan config
    -->

    <bean id="cacheManager" class="org.infinispan.manager.DefaultCacheManager">
        <constructor-arg value="infinispan.xml"/>
    </bean>

    <bean id="cache" abstract="true" factory-bean="cacheManager" factory-method="getCache"/>

    <bean id="vmCache" parent="cache">
        <constructor-arg value="vmCache"/>
    </bean>

    <bean id="hostCache" parent="cache">
        <constructor-arg value="hostCache"/>
    </bean>

    <bean id="projectCache" parent="cache">
        <constructor-arg value="projectCache"/>
    </bean>

    <!--
    DAO
    -->

    <bean id="vmDao" class="com.github.K0zka.kerub.data.ispn.VirtualMachineDaoImpl">
        <constructor-arg ref="vmCache"/>
    </bean>

    <bean id="hostDao" class="com.github.K0zka.kerub.data.ispn.HostDaoImpl">
        <constructor-arg ref="hostCache"/>
    </bean>

    <bean id="projectDao" class="com.github.K0zka.kerub.data.ispn.ProjectDaoImpl">
        <constructor-arg ref="projectCache"/>
    </bean>

    <!--
    Managers
    -->

    <bean id="hostManager" class="com.github.K0zka.kerub.host.HostManagerImpl"/>

    <!--
    MQ
    -->

    <bean id="hornetqConfig"
          class="org.hornetq.core.config.impl.ConfigurationImpl"/>

    <bean id="hornetqServer"
          class="org.hornetq.core.server.impl.HornetQServerImpl">
        <constructor-arg ref="hornetqConfig"/>
    </bean>

    <bean id="hornetqConnectionFactory"
          class="org.hornetq.jms.client.HornetQConnectionFactory">
    </bean>

    <!--
    Asynchronous invocations
    -->

    <bean id="asyncInvocationsQueue" class="org.hornetq.jms.client.HornetQQueue">
        <constructor-arg value="asyncInvocations"/>
    </bean>

    <bean id="asyncInvocationsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <constructor-arg ref="hornetqConnectionFactory"/>
        <property name="defaultDestination" ref="asyncInvocationsQueue"/>
    </bean>

    <bean id="asyncInvocationsListener" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="hornetqConnectionFactory"/>
        <property name="concurrency" value="1-8"/>
        <property name="destination" ref="asyncInvocationsQueue"/>
        <property name="messageListener" ref="asyncInvocationsMessageListener"/>
    </bean>

    <bean id="asyncInvocationsMessageListener" class="com.github.K0zka.kerub.utils.activeobject.MqExecutor"/>

    <!--
    REST
    -->

    <import resource="classpath:META-INF/cxf/cxf.xml" />
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml" />

    <jaxrs:server id="customerService" address="/r" serviceName="r" >
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJaxbJsonProvider"/>
        </jaxrs:providers>
        <jaxrs:serviceBeans>
            <bean id="host" class="com.github.K0zka.kerub.services.impl.HostServiceImpl">
                <constructor-arg ref="hostDao"/>
                <constructor-arg ref="hostManager"/>
            </bean>
            <bean id="vm" class="com.github.K0zka.kerub.services.impl.VirtualMachineServiceImpl">
                <constructor-arg ref="vmDao"/>
            </bean>
            <bean id="project" class="com.github.K0zka.kerub.services.impl.ProjectServiceImpl">
                <constructor-arg ref="projectDao"/>
            </bean>
            <ref bean="version"/>
        </jaxrs:serviceBeans>
    </jaxrs:server>

    <bean id="version" class="com.github.K0zka.kerub.services.impl.VersionServiceImpl"/>

</beans>