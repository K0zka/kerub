<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jaxrs="http://cxf.apache.org/jaxrs"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
            http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd">


	<!--
	infinispan config
	-->

	<bean id="cacheConfigBuilder" class="com.github.kerubistan.kerub.data.ispn.IspnConfiguration" init-method="init">
		<property name="baseDir" value="target/kerub-store"/>
		<property name="dynamicOwners" value="1"/>
		<property name="staticOwners" value="1"/>
	</bean>

	<bean name="cacheConfig" factory-bean="cacheConfigBuilder" factory-method="build"/>

	<bean name="globalConfig" factory-bean="cacheConfigBuilder" factory-method="buildGlobal"/>

	<bean id="cacheManager" class="org.infinispan.manager.DefaultCacheManager">
		<constructor-arg value="infinispan.xml"/>
	</bean>

	<bean id="cache" abstract="true" factory-bean="cacheManager" factory-method="getCache"/>

	<bean id="controllerConfigCache" parent="cache">
		<constructor-arg value="controllerConfigCache"/>
	</bean>

	<bean id="accountCache" parent="cache">
		<constructor-arg value="accountCache"/>
	</bean>

	<bean id="accountMembershipCache" parent="cache">
		<constructor-arg value="accountMembershipCache"/>
	</bean>

	<bean id="vmCache" parent="cache">
		<constructor-arg value="vmCache"/>
	</bean>

	<bean id="templateCache" parent="cache">
		<constructor-arg value="templateCache"/>
	</bean>

	<bean id="poolCache" parent="cache">
		<constructor-arg value="poolCache"/>
	</bean>

	<bean id="vNetCache" parent="cache">
		<constructor-arg value="vNetCache"/>
	</bean>

	<bean id="vmDynCache" parent="cache">
		<constructor-arg value="vmDynCache"/>
	</bean>
	<bean id="vmHistoryCache" parent="cache">
		<constructor-arg value="vmHistoryCache"/>
	</bean>

	<bean id="hostCache" parent="cache">
		<constructor-arg value="hostCache"/>
	</bean>

	<bean id="hostDynamicCache" parent="cache">
		<constructor-arg value="hostDynamicCache"/>
	</bean>
	<bean id="hostHistoryCache" parent="cache">
		<constructor-arg value="hostHistoryCache"/>
	</bean>


	<bean id="hostConfigCache" parent="cache">
		<constructor-arg value="hostConfigCache"/>
	</bean>

	<bean id="virtualStorageDeviceDynamicCache" parent="cache">
		<constructor-arg value="virtualStorageDeviceDynamicCache"/>
	</bean>

	<bean id="projectCache" parent="cache">
		<constructor-arg value="projectCache"/>
	</bean>

	<bean id="auditCache" parent="cache">
		<constructor-arg value="auditCache"/>
	</bean>

	<bean id="eventCache" parent="cache">
		<constructor-arg value="eventCache"/>
	</bean>

	<bean id="controllerDynamicCache" parent="cache">
		<constructor-arg value="controllerDynamicCache"/>
	</bean>

	<bean id="assignmentCache" parent="cache">
		<constructor-arg value="assignmentCache"/>
	</bean>

	<bean id="virtualStorageDeviceCache" parent="cache">
		<constructor-arg value="virtualStorageDeviceCache"/>
	</bean>

	<bean id="executionResultCache" parent="cache">
		<constructor-arg value="executionResultCache"/>
	</bean>

	<!--
	DAO
	-->

	<bean id="daoBase" abstract="true">
	</bean>

	<bean id="statisticsDao" class="com.github.kerubistan.kerub.data.ispn.StatisticsDaoImpl">
		<constructor-arg name="hostCache" ref="hostCache"/>
		<constructor-arg name="hostDynamicCache" ref="hostDynamicCache"/>
		<constructor-arg name="vmCache" ref="vmCache"/>
		<constructor-arg name="vdiskCache" ref="virtualStorageDeviceCache"/>
		<constructor-arg name="vdiskDynDao" ref="virtualStorageDeviceDynamicCache"/>
		<constructor-arg name="configDao" ref="controllerConfigDao"/>
	</bean>

	<bean id="controllerConfigDao" class="com.github.kerubistan.kerub.data.ispn.ControllerConfigDaoImpl" parent="daoBase">
		<constructor-arg ref="controllerConfigCache"/>
		<constructor-arg ref="auditManager"/>
		<constructor-arg ref="eventListener"/>
	</bean>

	<bean id="accountDao" class="com.github.kerubistan.kerub.data.ispn.AccountDaoImpl" parent="daoBase">
		<constructor-arg ref="accountCache"/>
		<constructor-arg ref="eventListener"/>
		<constructor-arg ref="auditManager"/>
	</bean>

	<bean id="accountMembershipDao" class="com.github.kerubistan.kerub.data.ispn.AccountMembershipDaoImpl" parent="daoBase">
		<constructor-arg ref="accountMembershipCache"/>
		<constructor-arg ref="eventListener"/>
		<constructor-arg ref="auditManager"/>
	</bean>

	<bean id="projectMembershipDao" class="com.github.kerubistan.kerub.data.ispn.ProjectMembershipDaoImpl" parent="daoBase">
		<constructor-arg ref="accountMembershipCache"/>
		<constructor-arg ref="eventListener"/>
		<constructor-arg ref="auditManager"/>
	</bean>

	<bean id="vmDao" class="com.github.kerubistan.kerub.data.ispn.VirtualMachineDaoImpl" parent="daoBase">
		<constructor-arg ref="vmCache"/>
		<constructor-arg ref="eventListener"/>
		<constructor-arg ref="auditManager"/>
	</bean>

	<bean id="vmDynDao" class="com.github.kerubistan.kerub.data.ispn.VirtualMachineDynamicDaoImpl">
		<constructor-arg ref="vmDynCache"/>
		<constructor-arg ref="vmHistoryDao"/>
		<constructor-arg ref="eventListener"/>
	</bean>
	<bean id="vmHistoryDao" class="com.github.kerubistan.kerub.data.ispn.history.VirtualMachineDynamicHistoryDaoImpl">
		<constructor-arg ref="vmHistoryCache"/>
	</bean>

	<bean id="poolDao" class="com.github.kerubistan.kerub.data.ispn.PoolDaoImpl" parent="daoBase">
		<constructor-arg ref="poolCache"/>
		<constructor-arg ref="eventListener"/>
		<constructor-arg ref="auditManager"/>
	</bean>

	<bean id="templateDao" class="com.github.kerubistan.kerub.data.ispn.TemplateDaoImpl" parent="daoBase">
		<constructor-arg ref="templateCache"/>
		<constructor-arg ref="eventListener"/>
		<constructor-arg ref="auditManager"/>
	</bean>

	<bean id="virtualStorageDeviceDao" class="com.github.kerubistan.kerub.data.ispn.VirtualStorageDeviceDaoImpl"
	      parent="daoBase">
		<constructor-arg ref="virtualStorageDeviceCache"/>
		<constructor-arg ref="eventListener"/>
		<constructor-arg ref="auditManager"/>
	</bean>

	<bean id="vNetDao" class="com.github.kerubistan.kerub.data.ispn.VirtualNetworkDaoImpl" parent="daoBase">
		<constructor-arg ref="vNetCache"/>
		<constructor-arg ref="eventListener"/>
		<constructor-arg ref="auditManager"/>
	</bean>

	<bean id="hostDao" class="com.github.kerubistan.kerub.data.ispn.HostDaoImpl" parent="daoBase">
		<constructor-arg ref="hostCache"/>
		<constructor-arg ref="eventListener"/>
		<constructor-arg ref="auditManager"/>
	</bean>

	<bean id="hostConfigDao" class="com.github.kerubistan.kerub.data.ispn.HostConfigurationDaoImpl" parent="daoBase">
		<constructor-arg ref="hostConfigCache"/>
		<constructor-arg ref="eventListener"/>
	</bean>

	<bean id="assignmentDao" class="com.github.kerubistan.kerub.data.ispn.AssignmentDaoImpl" parent="daoBase">
		<constructor-arg ref="assignmentCache"/>
		<constructor-arg ref="eventListener"/>
		<constructor-arg ref="auditManager"/>
	</bean>

	<bean id="hostDynamicDao" class="com.github.kerubistan.kerub.data.ispn.HostDynamicDaoImpl" parent="daoBase">
		<constructor-arg ref="hostDynamicCache"/>
		<constructor-arg ref="hostHistoryDao"/>
		<constructor-arg ref="eventListener"/>
	</bean>

	<bean id="hostHistoryDao" class="com.github.kerubistan.kerub.data.ispn.history.HostDynamicHistoryDao" parent="daoBase">
		<constructor-arg ref="hostHistoryCache"/>
	</bean>

	<bean id="virtualStorageDeviceDynDao" class="com.github.kerubistan.kerub.data.ispn.VirtualStorageDeviceDynamicDaoImpl"
	      parent="daoBase">
		<constructor-arg ref="virtualStorageDeviceDynamicCache"/>
		<constructor-arg ref="eventListener"/>
	</bean>

	<bean id="projectDao" class="com.github.kerubistan.kerub.data.ispn.ProjectDaoImpl" parent="daoBase">
		<constructor-arg ref="projectCache"/>
		<constructor-arg ref="eventListener"/>
		<constructor-arg ref="auditManager"/>
	</bean>

	<bean id="auditDao" class="com.github.kerubistan.kerub.data.ispn.AuditEntryDaoImpl">
		<constructor-arg ref="auditCache"/>
	</bean>

	<bean id="eventDao" class="com.github.kerubistan.kerub.data.ispn.EventDaoImpl">
		<constructor-arg ref="eventCache"/>
	</bean>

	<bean id="controllerDao" class="com.github.kerubistan.kerub.data.ispn.ControllerDaoImpl">
		<constructor-arg ref="cacheManager"/>
	</bean>

	<bean id="controllerDynamicDao" class="com.github.kerubistan.kerub.data.ispn.ControllerDynamicDaoImpl">
		<constructor-arg ref="controllerDynamicCache"/>
	</bean>

	<bean id="executionResultDao" class="com.github.kerubistan.kerub.data.ispn.ExecutionResultDaoImpl">
		<constructor-arg ref="executionResultCache"/>
	</bean>

	<bean id="anyAssetDao" class="com.github.kerubistan.kerub.data.hub.AnyAssetDaoImpl">
		<constructor-arg ref="vmDao"/>
		<constructor-arg ref="vNetDao"/>
		<constructor-arg ref="virtualStorageDeviceDao"/>
		<constructor-arg ref="poolDao"/>
		<constructor-arg ref="templateDao"/>
	</bean>

	<bean id="anyEntityDao" class="com.github.kerubistan.kerub.data.hub.AnyEntityDaoImpl">
		<constructor-arg ref="anyAssetDao"/>
		<constructor-arg>
			<map>
				<entry key="com.github.kerubistan.kerub.model.Host" value-ref="hostDao"/>
			</map>
		</constructor-arg>
	</bean>

	<!--
	Managers
	-->

	<bean id="assetValidator" class="com.github.kerubistan.kerub.security.ValidatorImpl">
		<constructor-arg ref="anyAssetDao"/>
	</bean>

	<bean id="assetAccessController" class="com.github.kerubistan.kerub.security.AssetAccessControllerImpl">
		<constructor-arg ref="controllerConfigDao"/>
		<constructor-arg ref="accountMembershipDao"/>
		<constructor-arg ref="projectMembershipDao"/>
		<constructor-arg ref="assetValidator"/>
	</bean>

	<bean id="entityAccessController" class="com.github.kerubistan.kerub.security.EntityAccessControllerImpl">
		<constructor-arg ref="assetAccessController"/>
		<constructor-arg ref="anyEntityDao"/>
	</bean>

	<bean
			id="auditManager"
	        class="com.github.kerubistan.kerub.audit.AuditManagerImpl">
		<constructor-arg ref="auditDao"/>
	</bean>

	<bean
			id="keyPairFactory"
			class="com.github.kerubistan.kerub.host.KeyPairFactory">
		<property name="keyStorePassword" value="password"/>
		<property name="certificatePassword" value="password"/>
	</bean>

	<bean id="keyPair"
	      factory-bean="keyPairFactory"
	      factory-method="createKeyPair"/>

	<bean
			id="hostManager"
			class="com.github.kerubistan.kerub.host.HostManagerImpl"
			init-method="start"
			destroy-method="stop">
		<constructor-arg ref="hostDao"/>
		<constructor-arg ref="hostDynamicDao"/>
		<constructor-arg ref="vmDynDao"/>
		<constructor-arg ref="sshClientService"/>
		<constructor-arg ref="controllerManager"/>
		<constructor-arg ref="assignmentDao"/>
		<constructor-arg ref="hostDiscoverer"/>
		<constructor-arg ref="hostAssigner"/>
	</bean>

	<bean id="hostDiscoverer" class="com.github.kerubistan.kerub.host.HostCapabilitiesDiscovererImpl">
		<constructor-arg ref="controllerConfigDao"/>
	</bean>
	<bean id="hostAssigner" class="com.github.kerubistan.kerub.host.ControllerAssignerImpl">
		<constructor-arg ref="backtrack"/>
		<constructor-arg ref="controllerDao"/>
		<constructor-arg ref="controllerDynamicDao"/>
		<constructor-arg ref="assignmentDao"/>
		<constructor-arg ref="interController"/>
	</bean>

	<bean id="interController" class="com.github.kerubistan.kerub.controller.impl.InterControllerImpl">
		<constructor-arg ref="jmsTemplate"/>
	</bean>

	<bean id="interControllerListener" class="com.github.kerubistan.kerub.controller.impl.InterControllerListener">
		<constructor-arg ref="hostManager"/>
		<constructor-arg ref="hostDao"/>
		<constructor-arg ref="messageListener"/>
	</bean>

	<bean id="sshClientFactory" class="com.github.kerubistan.kerub.host.SshClientFactory"/>

	<bean id="sshClient"
	      factory-bean="sshClientFactory"
	      factory-method="build"
	      init-method="start"
	      destroy-method="stop">
		<constructor-arg>
			<map>
				<entry key="hearbeat-interval" value="2000"/>
				<entry key="sftp-channel-open-timeout" value="240000"/>
				<entry key="idle-timeout" value="240000"/>
			</map>
		</constructor-arg>
	</bean>

	<bean id="sshClientService" class="com.github.kerubistan.kerub.host.SshClientServiceImpl" depends-on="artemis">
		<constructor-arg ref="sshClient"/>
		<constructor-arg ref="keyPair"/>
		<constructor-arg value="1000"/>
		<constructor-arg value="MILLISECONDS"/>
	</bean>

	<bean
			id="controllerManager"
			class="com.github.kerubistan.kerub.host.ControllerManagerImpl"
			init-method="start">
		<constructor-arg ref="controllerDynamicDao"/>
		<constructor-arg ref="cacheManager"/>
	</bean>

	<!--
	Planner and executor
	-->

	<!--
	<bean id="stateBuilder" class="com.github.kerubistan.kerub.planner.OperationalStateBuilderImpl">
		<constructor-arg ref="controllerManager"/>
		<constructor-arg ref="assignmentDao"/>
		<constructor-arg ref="hostDynamicDao"/>
		<constructor-arg ref="hostDao"/>
		<constructor-arg ref="virtualStorageDeviceDao"/>
		<constructor-arg ref="virtualStorageDeviceDynDao"/>
		<constructor-arg ref="vmDao"/>
		<constructor-arg ref="vmDynDao"/>
	</bean>
	-->

	<bean id="stateBuilder" class="com.github.kerubistan.kerub.planner.GlobalOperationalStateBuilderImpl">
		<constructor-arg ref="hostDynamicDao"/>
		<constructor-arg ref="hostDao"/>
		<constructor-arg ref="hostConfigDao"/>
		<constructor-arg ref="virtualStorageDeviceDao"/>
		<constructor-arg ref="virtualStorageDeviceDynDao"/>
		<constructor-arg ref="vmDao"/>
		<constructor-arg ref="vmDynDao"/>
		<constructor-arg ref="controllerConfigDao"/>
	</bean>


	<bean id="backtrack" class="com.github.k0zka.finder4j.backtrack.BacktrackServiceImpl"/>

	<bean id="planner" class="com.github.kerubistan.kerub.planner.PlannerImpl" init-method="start" destroy-method="stop">
		<constructor-arg ref="backtrack"/>
		<constructor-arg ref="planExecutor"/>
		<constructor-arg ref="stateBuilder"/>
		<constructor-arg ref="violationDetector"/>
	</bean>

	<bean id="violationDetector" class="com.github.kerubistan.kerub.planner.PlanViolationDetectorImpl"/>

	<bean id="planExecutor" class="com.github.kerubistan.kerub.planner.execution.PlanExecutorImpl">
		<constructor-arg ref="executionResultDao"/>
		<constructor-arg ref="controllerManager"/>
		<constructor-arg ref="hostManager"/>
		<constructor-arg ref="hostManager"/>
		<constructor-arg ref="hostDao"/>
		<constructor-arg ref="hostDynamicDao"/>
		<constructor-arg ref="vmDynDao"/>
		<constructor-arg ref="virtualStorageDeviceDao"/>
		<constructor-arg ref="virtualStorageDeviceDynDao"/>
		<constructor-arg ref="hostConfigDao"/>
	</bean>

	<!--
	MQ
	-->

	<bean id="artemis"
	      class="org.apache.activemq.artemis.jms.server.embedded.EmbeddedJMS"
	      init-method="start"
	      destroy-method="stop">
	</bean>

	<bean id="globalEvents" class="org.apache.activemq.artemis.jms.client.ActiveMQTopic">
		<constructor-arg value="jms.topic.globalEvents"/>
	</bean>

	<bean id="privateEvents" class="org.apache.activemq.artemis.jms.client.ActiveMQQueue">
		<constructor-arg value="jms.queue.kerub-mq-#{controllerManager.controllerId}"/>
	</bean>

	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="artemisCF"/>
	</bean>

	<bean id="artemisCF" class="org.apache.activemq.artemis.jms.client.ActiveMQJMSConnectionFactory">
		<constructor-arg value="false"/>
		<constructor-arg>
			<bean class="org.apache.activemq.artemis.api.core.TransportConfiguration">
				<constructor-arg value="org.apache.activemq.artemis.core.remoting.impl.invm.InVMConnectorFactory"/>
			</bean>
		</constructor-arg>
	</bean>

	<bean class="com.github.kerubistan.kerub.utils.artemis.MqInit" factory-method="init">
		<constructor-arg ref="controllerManager"/>
		<constructor-arg ref="artemis"/>
		<constructor-arg ref="artemisCF"/>
	</bean>

	<!--
	Event listeners
	-->

	<bean id="eventListener" class="com.github.kerubistan.kerub.utils.JmsEventListener">
		<constructor-arg>
			<bean class="org.springframework.jms.core.JmsTemplate">
				<property name="connectionFactory" ref="artemisCF"/>
				<property name="defaultDestination" ref="globalEvents"/>
			</bean>
		</constructor-arg>
	</bean>

	<bean id="messageListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="artemisCF"/>
		<property name="concurrency" value="1"/>
		<property name="destination" ref="globalEvents"/>
		<property name="messageListener" ref="messageListener"/>
	</bean>

	<bean
			id="messageListener"
			class="com.github.kerubistan.kerub.services.socket.InternalMessageListenerImpl">
		<constructor-arg ref="planner"/>
	</bean>

	<bean id="privateMessageListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="artemisCF"/>
		<property name="concurrency" value="1-2"/>
		<property name="destination" ref="privateEvents"/>
		<property name="messageListener" ref="interControllerListener"/>
	</bean>

	<bean id="broadcastEvents" class="org.apache.activemq.artemis.jms.client.ActiveMQQueue">
		<constructor-arg value="jms.topic.kerub-broadcast"/>
	</bean>


	<bean id="broadcastMessageListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="artemisCF"/>
		<property name="concurrency" value="1-2"/>
		<property name="destination" ref="broadcastEvents"/>
		<property name="messageListener" ref="interControllerListener"/>
	</bean>

	<!--
	Asynchronous invocations
	-->

	<bean id="asyncInvocationsQueue" class="org.apache.activemq.artemis.jms.client.ActiveMQQueue">
		<constructor-arg value="jms.queue.asyncInvocations"/>
	</bean>

	<bean id="asyncInvocationsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<constructor-arg ref="artemisCF"/>
		<property name="defaultDestination" ref="asyncInvocationsQueue"/>
	</bean>

	<bean id="asyncInvocationsListener" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="artemisCF"/>
		<property name="concurrency" value="1-8"/>
		<property name="destination" ref="asyncInvocationsQueue"/>
		<property name="messageListener" ref="asyncInvocationsMessageListener"/>
	</bean>

	<bean id="asyncInvocationsMessageListener" class="com.github.kerubistan.kerub.utils.activeobject.MqExecutor"/>

	<!--
	REST
	-->

	<import resource="classpath:META-INF/cxf/cxf.xml"/>
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml"/>

	<bean id="objectMapperFactory"
	      class="com.github.kerubistan.kerub.utils.ObjectMapperFactory">
		<constructor-arg name="prettyPrint" index="0" value="true"/>
	</bean>

	<bean id="objectMapper"
	      factory-bean="objectMapperFactory"
	      factory-method="create">
	</bean>

	<jaxrs:server address="/r" serviceName="r">
		<jaxrs:providers>
			<bean class="com.fasterxml.jackson.jaxrs.json.JacksonJsonProvider">
				<constructor-arg ref="objectMapper"/>
			</bean>
			<bean class="com.github.kerubistan.kerub.services.exc.mappers.HostAddressExceptionMapper"/>
			<bean class="com.github.kerubistan.kerub.services.exc.mappers.UnauthenticatedExceptionMapper"/>
			<bean class="com.github.kerubistan.kerub.services.exc.mappers.AuthenticationExceptionMapper"/>
			<bean class="com.github.kerubistan.kerub.services.exc.mappers.AuthorizationExceptionMapper"/>

			<bean class="com.github.kerubistan.kerub.services.exc.mappers.RuntimeSshExceptionMapper"/>
			<bean class="com.github.kerubistan.kerub.services.exc.mappers.UnresolvedAddressExceptionMapper"/>

			<bean class="com.github.kerubistan.kerub.services.exc.mappers.JsonMappingExceptionMapper">
				<constructor-arg ref="objectMapper"/>
			</bean>
			<bean class="com.github.kerubistan.kerub.services.exc.mappers.JsonParseExceptionMapper">
				<constructor-arg ref="objectMapper"/>
			</bean>

			<bean class="com.github.kerubistan.kerub.services.exc.mappers.DefaultExceptionMapper"/>
		</jaxrs:providers>
		<jaxrs:serviceBeans>
			<bean id="controllerConfig" class="com.github.kerubistan.kerub.services.impl.ControllerConfigServiceImpl">
				<constructor-arg ref="controllerConfigDao"/>
			</bean>
			<bean id="accounts" class="com.github.kerubistan.kerub.services.impl.AccountServiceImpl">
				<constructor-arg ref="accountDao"/>
				<constructor-arg ref="assetAccessController"/>
			</bean>
			<bean id="accountMemberships" class="com.github.kerubistan.kerub.services.impl.AccountMembershipServiceImpl">
				<constructor-arg ref="accountMembershipDao"/>
			</bean>
			<bean id="vm" class="com.github.kerubistan.kerub.services.impl.VirtualMachineServiceImpl">
				<constructor-arg ref="vmDao"/>
				<constructor-arg ref="assetAccessController"/>
				<constructor-arg ref="vmDynDao"/>
			</bean>
			<bean id="pool" class="com.github.kerubistan.kerub.services.impl.PoolServiceImpl">
				<constructor-arg ref="poolDao"/>
				<constructor-arg ref="assetAccessController"/>
			</bean>
			<bean id="template" class="com.github.kerubistan.kerub.services.impl.TemplateServiceImpl">
				<constructor-arg ref="templateDao"/>
				<constructor-arg ref="assetAccessController"/>
			</bean>
			<bean id="vnet" class="com.github.kerubistan.kerub.services.impl.VirtualNetworkServiceImpl">
				<constructor-arg ref="assetAccessController"/>
				<constructor-arg ref="vNetDao"/>
				<constructor-arg ref="vmDao"/>
			</bean>
			<bean id="vmDyn" class="com.github.kerubistan.kerub.services.impl.VirtualMachineDynamicServiceImpl">
				<constructor-arg ref="vmDynDao"/>
				<constructor-arg ref="vmDao"/>
			</bean>
			<bean id="vstorage" class="com.github.kerubistan.kerub.services.impl.VirtualStorageDeviceServiceImpl">
				<constructor-arg ref="virtualStorageDeviceDao"/>
				<constructor-arg ref="assetAccessController"/>
				<constructor-arg ref="virtualStorageDeviceDynDao"/>
				<constructor-arg ref="hostDao"/>
				<constructor-arg ref="hostDynamicDao"/>
				<constructor-arg ref="hostManager"/>
				<constructor-arg ref="vmDao"/>
			</bean>
			<bean id="vstorageDyn" class="com.github.kerubistan.kerub.services.impl.VirtualStorageDeviceDynamicServiceImpl">
				<constructor-arg ref="virtualStorageDeviceDynDao"/>
			</bean>
			<bean id="project" class="com.github.kerubistan.kerub.services.impl.ProjectServiceImpl">
				<constructor-arg ref="projectDao"/>
			</bean>
			<bean id="audit" class="com.github.kerubistan.kerub.services.impl.AuditServiceImpl">
				<constructor-arg ref="auditDao"/>
			</bean>
			<bean id="event" class="com.github.kerubistan.kerub.services.impl.EventServiceImpl">
				<constructor-arg ref="eventDao"/>
			</bean>
			<bean id="stats" class="com.github.kerubistan.kerub.services.impl.StatisticsServiceImpl">
				<constructor-arg ref="cacheManager"/>
			</bean>
			<bean id="usageStats" class="com.github.kerubistan.kerub.services.impl.UsageStatisticsServiceImpl">
				<constructor-arg ref="statisticsDao"/>
			</bean>
			<bean id="controllers" class="com.github.kerubistan.kerub.services.impl.ControllerServiceImpl">
				<constructor-arg ref="controllerDao"/>
			</bean>
			<bean id="assignments" class="com.github.kerubistan.kerub.services.impl.AssignmentServiceImpl">
				<constructor-arg ref="assignmentDao"/>
				<constructor-arg ref="hostManager"/>
			</bean>
			<ref bean="version"/>
			<bean id="host" class="com.github.kerubistan.kerub.services.impl.HostServiceImpl">
				<constructor-arg ref="hostDao"/>
				<constructor-arg ref="hostManager"/>
				<constructor-arg ref="sshClientService"/>
			</bean>
			<bean id="hostDyn" class="com.github.kerubistan.kerub.services.impl.HostDynamicServiceImpl">
				<constructor-arg ref="hostDynamicDao"/>
			</bean>
			<bean id="login" class="com.github.kerubistan.kerub.services.impl.LoginServiceImpl">
			</bean>
			<bean id="ipmi" class="com.github.kerubistan.kerub.services.IpmiService">
			</bean>
			<ref bean="motd"/>
		</jaxrs:serviceBeans>
	</jaxrs:server>

	<bean id="motd" class="com.github.kerubistan.kerub.services.impl.MotdServiceImpl">
		<constructor-arg index="0" name="motd">
			<value>#### Developer mode

This instance seems to be running in dev/eval mode.
You can log in with the following users (see **shiro.ini**):

* admin/password
* enduser/password

You can edit the 'motd' of kerub in the configuration.
Remember, that the motd is readable by anyone!
			</value>
		</constructor-arg>
	</bean>


	<bean
			id="version"
			class="com.github.kerubistan.kerub.services.impl.VersionServiceImpl"
			init-method="logStart"
			destroy-method="logStop"/>

	<!--
	Security
	-->

	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager"/>
	</bean>

	<bean
			id="securityManager"
			class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="kerubRealm"/>
	</bean>

	<bean
			id="lifecycleBeanPostProcessor"
			class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

	<bean
			class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
			depends-on="lifecycleBeanPostProcessor"/>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager"/>
	</bean>

	<bean id="kerubRealm" class="org.apache.shiro.realm.text.IniRealm">
		<property name="resourcePath" value="classpath:shiro.ini"/>
	</bean>

	<!--
	Configuration, utilities
	-->

	<bean class="com.github.kerubistan.kerub.utils.spring.BeanOverrideConfigurer">
		<property name="location" value="classpath:local/kerub.properties"/>
		<property name="ignoreResourceNotFound" value="true"/>
	</bean>

	<bean class="com.github.kerubistan.kerub.utils.spring.BeanOverrideConfigurer">
		<property name="location" value="classpath:cluster/kerub.properties"/>
		<property name="ignoreResourceNotFound" value="true"/>
	</bean>

</beans>
