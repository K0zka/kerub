<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jaxrs="http://cxf.apache.org/jaxrs"
       xmlns:websocket="http://www.springframework.org/schema/websocket"
       xmlns:cxf="http://cxf.apache.org/core"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd
            http://cxf.apache.org/core http://cxf.apache.org/schemas/core.xsd
            http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.0.xsd">


    <!--
    infinispan config
    -->

    <bean id="cacheManager" class="org.infinispan.manager.DefaultCacheManager">
        <constructor-arg value="infinispan.xml"/>
    </bean>

    <bean id="cache" abstract="true" factory-bean="cacheManager" factory-method="getCache"/>

    <bean id="vmCache" parent="cache">
        <constructor-arg value="vmCache"/>
    </bean>

    <bean id="hostCache" parent="cache">
        <constructor-arg value="hostCache"/>
    </bean>

    <bean id="projectCache" parent="cache">
        <constructor-arg value="projectCache"/>
    </bean>

    <bean id="auditCache" parent="cache">
        <constructor-arg value="auditCache"/>
    </bean>

    <bean id="eventCache" parent="cache">
        <constructor-arg value="eventCache"/>
    </bean>

    <!--
    DAO
    -->

    <bean id="daoBase" abstract="true">
    </bean>

    <bean id="vmDao" class="com.github.K0zka.kerub.data.ispn.VirtualMachineDaoImpl" parent="daoBase">
        <constructor-arg ref="vmCache"/>
        <constructor-arg ref="eventListener"/>
    </bean>

    <bean id="hostDao" class="com.github.K0zka.kerub.data.ispn.HostDaoImpl" parent="daoBase">
        <constructor-arg ref="hostCache"/>
        <constructor-arg ref="eventListener"/>
    </bean>

    <bean id="hostDynamicDao" class="com.github.K0zka.kerub.data.ispn.HostDynamicDaoImpl" parent="daoBase">
        <constructor-arg ref="hostCache"/>
        <constructor-arg ref="eventListener"/>
    </bean>

    <bean id="projectDao" class="com.github.K0zka.kerub.data.ispn.ProjectDaoImpl" parent="daoBase">
        <constructor-arg ref="projectCache"/>
        <constructor-arg ref="eventListener"/>
    </bean>

    <bean id="auditDao" class="com.github.K0zka.kerub.data.ispn.AuditEntryDaoImpl">
        <constructor-arg ref="auditCache"/>
    </bean>

    <bean id="eventDao" class="com.github.K0zka.kerub.data.ispn.EventDaoImpl">
        <constructor-arg ref="eventCache"/>
    </bean>

    <!--
    Managers
    -->

    <bean
            id="keyPairFactory"
            class="com.github.K0zka.kerub.host.KeyPairFactory">
        <property name="keyStorePassword" value="password"/>
        <property name="certificatePassword" value="password"/>
    </bean>

    <bean id="keyPair"
          factory-bean="keyPairFactory"
          factory-method="createKeyPair"/>

    <bean
            id="hostManager"
            class="com.github.K0zka.kerub.host.HostManagerImpl"
            init-method="start"
            destroy-method="stop">
        <constructor-arg ref="keyPair"/>
        <constructor-arg ref="hostDao"/>
        <constructor-arg ref="hostDynamicDao"/>
    </bean>

    <!--
    MQ
    -->

    <bean id="hornetQ"
          class="org.hornetq.jms.server.embedded.EmbeddedJMS"
          init-method="start"
          destroy-method="stop">
    </bean>

    <bean id="hornetQCF"
          factory-bean="hornetQ"
          factory-method="lookup">
        <constructor-arg value="ConnectionFactory"/>
    </bean>

    <bean id="globalEvents" class="org.hornetq.jms.client.HornetQTopic">
        <constructor-arg value="globalEvents"/>
    </bean>

    <!--
    Event listeners
    -->

    <bean id="eventListener" class="com.github.K0zka.kerub.utils.JmsEventListener">
        <constructor-arg>
            <bean class="org.springframework.jms.core.JmsTemplate">
                <property name="connectionFactory" ref="hornetQCF"/>
                <property name="defaultDestination" ref="globalEvents"/>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="messageListenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="hornetQCF"/>
        <property name="concurrency" value="1-4"/>
        <property name="destination" ref="globalEvents"/>
        <property name="messageListener" ref="messageListener"/>
    </bean>

    <bean
            id="messageListener"
            class="com.github.K0zka.kerub.services.socket.InternalMessageListener"/>

    <!--
    Asynchronous invocations
    -->

    <bean id="asyncInvocationsQueue" class="org.hornetq.jms.client.HornetQQueue">
        <constructor-arg value="asyncInvocations"/>
    </bean>

    <bean id="asyncInvocationsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <constructor-arg ref="hornetQCF"/>
        <property name="defaultDestination" ref="asyncInvocationsQueue"/>
    </bean>

    <bean id="asyncInvocationsListener" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="hornetQCF"/>
        <property name="concurrency" value="1-8"/>
        <property name="destination" ref="asyncInvocationsQueue"/>
        <property name="messageListener" ref="asyncInvocationsMessageListener"/>
    </bean>

    <bean id="asyncInvocationsMessageListener" class="com.github.K0zka.kerub.utils.activeobject.MqExecutor"/>

    <!--
    REST
    -->

    <import resource="classpath:META-INF/cxf/cxf.xml" />
    <import resource="classpath:META-INF/cxf/cxf-servlet.xml" />

    <jaxrs:server id="customerService" address="/r" serviceName="r" >
        <jaxrs:providers>
            <bean class="com.fasterxml.jackson.jaxrs.json.JacksonJaxbJsonProvider"/>
        </jaxrs:providers>
        <jaxrs:serviceBeans>
            <bean id="host" class="com.github.K0zka.kerub.services.impl.HostServiceImpl">
                <constructor-arg ref="hostDao"/>
                <constructor-arg ref="hostManager"/>
            </bean>
            <bean id="vm" class="com.github.K0zka.kerub.services.impl.VirtualMachineServiceImpl">
                <constructor-arg ref="vmDao"/>
            </bean>
            <bean id="project" class="com.github.K0zka.kerub.services.impl.ProjectServiceImpl">
                <constructor-arg ref="projectDao"/>
            </bean>
            <bean id="audit" class="com.github.K0zka.kerub.services.impl.AuditServiceImpl">
                <constructor-arg ref="auditDao"/>
            </bean>
            <bean id="event" class="com.github.K0zka.kerub.services.impl.EventServiceImpl">
                <constructor-arg ref="eventDao"/>
            </bean>
            <bean id="stats" class="com.github.K0zka.kerub.services.impl.StatisticsServiceImpl">
                <constructor-arg ref="cacheManager"/>
            </bean>
            <ref bean="version"/>
        </jaxrs:serviceBeans>
    </jaxrs:server>

    <bean
            id="version"
            class="com.github.K0zka.kerub.services.impl.VersionServiceImpl"
            init-method="logStart"
            destroy-method="logStop"/>

    <!--
    Configuration, utilities
    -->

    <bean class="org.springframework.beans.factory.config.PropertyOverrideConfigurer">
        <property name="location" value="kerub.properties"/>
        <property name="ignoreResourceNotFound" value="true"/>
    </bean>

</beans>
